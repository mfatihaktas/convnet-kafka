version: "3"

networks:
  img-net:
    name: img-net
    driver: bridge

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.7
    container_name: zookeeper
    networks:
      - img-net
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3
    container_name: kafka
    networks:
      - img-net
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS='img:1:1'
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
  classifier:
    image: mfatihaktas/img-classification-service
    container_name: classifier
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - img-net
    command: python3 -u /home/app/classifier.py --id=0 --training-data-dir=$TRAINING_DATA_DIR --class-names=$CLASS_NAMES --bootstrap-servers=kafka:9092
    depends_on:
      - kafka
  flask-server:
    image: mfatihaktas/img-classification-service
    container_name: flask-server
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - img-net
    ports:
      - "8080:5000"
    command: python3 -u /home/app/server.py --id=0 --bootstrap-servers=kafka:9092
    depends_on:
      - kafka
  client:
    image: mfatihaktas/img-classification-service
    container_name: client
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - img-net
    command: python3 -u /home/app/client.py --id=0 --img-dir=$IMG_DIR --server-ip=flask-server --server-port=5000
    depends_on:
      - flask-server
